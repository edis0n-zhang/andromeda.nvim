---@class Andromeda
---@field config AndromedaConfig
---@field palette AndromedaPalette
local Andromeda = {}

---@alias Contrast "high" | "low" | ""

---@class ItalicConfig
---@field strings boolean
---@field comments boolean
---@field operators boolean
---@field folds boolean
---@field emphasis boolean

---@class HighlightDefinition
---@field fg string?
---@field bg string?
---@field sp string?
---@field blend integer?
---@field bold boolean?
---@field standout boolean?
---@field underline boolean?
---@field undercurl boolean?
---@field underdouble boolean?
---@field underdotted boolean?
---@field strikethrough boolean?
---@field italic boolean?
---@field reverse boolean?
---@field nocombine boolean?

---@class AndromedaConfig
---@field terminal_colors boolean?
---@field undercurl boolean?
---@field underline boolean?
---@field bold boolean?
---@field italic ItalicConfig?
---@field strikethrough boolean?
---@field contrast Contrast?
---@field invert_selection boolean?
---@field invert_signs boolean?
---@field invert_tabline boolean?
---@field invert_intend_guides boolean?
---@field inverse boolean?
---@field overrides table<string, HighlightDefinition>?
---@field palette_overrides table<string, string>?
Andromeda.config = {
	terminal_colors = true,
	undercurl = true,
	underline = true,
	bold = true,
	italic = {
		strings = true,
		comments = true,
		operators = false,
		folds = true,
		emphasis = true,
	},
	strikethrough = true,
	invert_selection = false,
	invert_signs = false,
	invert_tabline = false,
	invert_intend_guides = false,
	inverse = true,
	contrast = "",
	palette_overrides = {},
	overrides = {},
	dim_inactive = false,
	transparent_mode = false,
}

-- Define the Andromeda color palette based on the Zed JSON theme
---@class AndromedaPalette
Andromeda.palette = {
	-- General UI Colors
	border = "#2b2f38",
	border_variant = "#252931",
	border_focused = "#183934",
	border_selected = "#183934",
	border_disabled = "#292d37",
	elevated_surface_background = "#21242b",
	surface_background = "#21242b",
	background = "#262933",
	element_background = "#21242b",
	element_hover = "#252931",
	element_active = "#2a2f39",
	element_selected = "#2a2f39",
	element_disabled = "#21242b",
	drop_target_background = "#aca8ae80",
	ghost_element_background = "#00000000",
	ghost_element_hover = "#252931",
	ghost_element_active = "#2a2f39",
	ghost_element_selected = "#2a2f39",
	ghost_element_disabled = "#21242b",
	text = "#f7f7f8",
	text_muted = "#aca8ae",
	text_placeholder = "#6b6b73",
	text_disabled = "#6b6b73",
	text_accent = "#10a793",
	icon = "#f7f7f8",
	icon_muted = "#aca8ae",
	icon_disabled = "#6b6b73",
	icon_placeholder = "#aca8ae",
	icon_accent = "#10a793",
	status_bar_background = "#262933",
	title_bar_background = "#262933",
	title_bar_inactive_background = "#21242b",
	toolbar_background = "#1e2025",
	tab_bar_background = "#21242b",
	tab_inactive_background = "#21242b",
	tab_active_background = "#1e2025",
	search_match_background = "#11a79366",
	panel_background = "#21242b",
	scrollbar_thumb_background = "#f7f7f84c",
	scrollbar_thumb_hover_background = "#252931",
	scrollbar_thumb_border = "#252931",
	scrollbar_track_background = "#00000000",
	scrollbar_track_border = "#21232a",
	editor_foreground = "#f7f7f8",
	editor_background = "#1e2025",
	editor_gutter_background = "#1e2025",
	editor_subheader_background = "#21242b",
	editor_active_line_background = "#21242bbf",
	editor_highlighted_line_background = "#21242b",
	editor_line_number = "#f7f7f859",
	editor_active_line_number = "#f7f7f8",
	editor_invisible = "#64646d",
	editor_wrap_guide = "#f7f7f80d",
	editor_active_wrap_guide = "#f7f7f81a",
	editor_document_highlight_read_background = "#10a7931a",
	editor_document_highlight_write_background = "#64646d66",
	terminal_background = "#1e2025",
	terminal_foreground = "#f7f7f8",
	terminal_bright_foreground = "#f7f7f8",
	terminal_dim_foreground = "#1e2025",
	-- Terminal ANSI Colors
	ansi_black = "#1e2025",
	ansi_bright_black = "#40434c",
	ansi_dim_black = "#f7f7f8",
	ansi_red = "#f82871",
	ansi_bright_red = "#8e0f3a",
	ansi_dim_red = "#ffa3b5",
	ansi_green = "#96df71",
	ansi_bright_green = "#457c38",
	ansi_dim_green = "#cef0b9",
	ansi_yellow = "#fee56c",
	ansi_bright_yellow = "#958334",
	ansi_dim_yellow = "#fef1b7",
	ansi_blue = "#10a793",
	ansi_bright_blue = "#1a5148",
	ansi_dim_blue = "#9cd4c7",
	ansi_magenta = "#c74cec",
	ansi_bright_magenta = "#682681",
	ansi_dim_magenta = "#e7abf7",
	ansi_cyan = "#08e7c5",
	ansi_bright_cyan = "#008169",
	ansi_dim_cyan = "#a9f4e1",
	ansi_white = "#f7f7f8",
	ansi_bright_white = "#f7f7f8",
	ansi_dim_white = "#87858c",
	link_text_hover = "#10a793",
	conflict = "#fee56c",
	conflict_background = "#5c5014",
	conflict_border = "#796b26",
	created = "#96df71",
	created_background = "#184618",
	created_border = "#306129",
	deleted = "#f82871",
	deleted_background = "#54051b",
	deleted_border = "#72092a",
	error = "#f82871",
	error_background = "#54051b",
	error_border = "#72092a",
	hidden = "#6b6b73",
	hidden_background = "#262933",
	hidden_border = "#292d37",
	hint = "#618399",
	hint_background = "#12231f",
	hint_border = "#183934",
	ignored = "#6b6b73",
	ignored_background = "#262933",
	ignored_border = "#2b2f38",
	info = "#10a793",
	info_background = "#12231f",
	info_border = "#183934",
	modified = "#fee56c",
	modified_background = "#5c5014",
	modified_border = "#796b26",
	predictive = "#315f70",
	predictive_background = "#184618",
	predictive_border = "#306129",
	renamed = "#10a793",
	renamed_background = "#12231f",
	renamed_border = "#183934",
	success = "#96df71",
	success_background = "#184618",
	success_border = "#306129",
	unreachable = "#aca8ae",
	unreachable_background = "#262933",
	unreachable_border = "#2b2f38",
	warning = "#fee56c",
	warning_background = "#5c5014",
	warning_border = "#796b26",
}

-- Function to get the color groups based on configuration and palette
local function get_colors()
	local p = Andromeda.palette
	local config = Andromeda.config

	-- Apply palette overrides
	for color, hex in pairs(config.palette_overrides) do
		p[color] = hex
	end

	local bg = vim.o.background
	local contrast = config.contrast

	-- Define color groups based on background and contrast
	local color_groups = {
		dark = {
			bg0 = p.background,
			bg1 = p.element_background,
			bg2 = p.editor_subheader_background,
			bg3 = p.elevated_surface_background,
			bg4 = p.scrollbar_thumb_background,
			fg0 = p.text,
			fg1 = p.text_muted,
			fg2 = p.text_placeholder,
			fg3 = p.text_disabled,
			fg4 = p.icon_muted,
			red = p.ansi_red,
			green = p.ansi_green,
			yellow = p.ansi_yellow,
			blue = p.ansi_blue,
			purple = p.ansi_magenta,
			aqua = p.ansi_cyan,
			orange = p.ansi_bright_orange,
			neutral_red = p.neutral_red,
			neutral_green = p.neutral_green,
			neutral_yellow = p.neutral_yellow,
			neutral_blue = p.neutral_blue,
			neutral_purple = p.neutral_purple,
			neutral_aqua = p.neutral_aqua,
			dark_red = p.dark_red,
			dark_green = p.dark_green,
			dark_aqua = p.dark_aqua,
			gray = p.text_muted,
		},
		light = {
			bg0 = p.light_background, -- Define if needed
			bg1 = p.light_element_background, -- Define if needed
			-- Continue defining light mode if applicable
		},
	}

	-- Apply contrast adjustments if any
	if contrast ~= nil and contrast ~= "" then
		color_groups[bg].bg0 = p[bg .. "_bg0_" .. contrast] or color_groups[bg].bg0
		color_groups[bg].red = p[bg .. "_red_" .. contrast] or color_groups[bg].red
		color_groups[bg].green = p[bg .. "_green_" .. contrast] or color_groups[bg].green
		color_groups[bg].aqua = p[bg .. "_aqua_" .. contrast] or color_groups[bg].aqua
		-- Add more adjustments as needed
	end

	return color_groups[bg]
end

-- Function to define highlight groups
local function get_groups()
	local colors = get_colors()
	local config = Andromeda.config

	if config.terminal_colors then
		local term_colors = {
			colors.bg0,
			colors.red,
			colors.green,
			colors.yellow,
			colors.blue,
			colors.purple,
			colors.aqua,
			colors.fg4,
			colors.gray,
			colors.red,
			colors.green,
			colors.yellow,
			colors.blue,
			colors.purple,
			colors.aqua,
			colors.fg1,
		}
		for index, value in ipairs(term_colors) do
			vim.g["terminal_color_" .. (index - 1)] = value
		end
	end

	local groups = {
		AndromedaFg0 = { fg = colors.fg0 },
		AndromedaFg1 = { fg = colors.fg1 },
		AndromedaFg2 = { fg = colors.fg2 },
		AndromedaFg3 = { fg = colors.fg3 },
		AndromedaFg4 = { fg = colors.fg4 },
		AndromedaGray = { fg = colors.gray },
		AndromedaBg0 = { fg = colors.bg0 },
		AndromedaBg1 = { fg = colors.bg1 },
		AndromedaBg2 = { fg = colors.bg2 },
		AndromedaBg3 = { fg = colors.bg3 },
		AndromedaBg4 = { fg = colors.bg4 },
		AndromedaRed = { fg = colors.red },
		AndromedaRedBold = { fg = colors.red, bold = config.bold },
		AndromedaGreen = { fg = colors.green },
		AndromedaGreenBold = { fg = colors.green, bold = config.bold },
		AndromedaYellow = { fg = colors.yellow },
		AndromedaYellowBold = { fg = colors.yellow, bold = config.bold },
		AndromedaBlue = { fg = colors.blue },
		AndromedaBlueBold = { fg = colors.blue, bold = config.bold },
		AndromedaPurple = { fg = colors.purple },
		AndromedaPurpleBold = { fg = colors.purple, bold = config.bold },
		AndromedaAqua = { fg = colors.aqua },
		AndromedaAquaBold = { fg = colors.aqua, bold = config.bold },
		AndromedaOrange = { fg = colors.orange },
		AndromedaOrangeBold = { fg = colors.orange, bold = config.bold },
		AndromedaRedSign = config.transparent_mode and { fg = colors.red, reverse = config.invert_signs }
			or { fg = colors.red, bg = colors.bg1, reverse = config.invert_signs },
		AndromedaGreenSign = config.transparent_mode and { fg = colors.green, reverse = config.invert_signs }
			or { fg = colors.green, bg = colors.bg1, reverse = config.invert_signs },
		AndromedaYellowSign = config.transparent_mode and { fg = colors.yellow, reverse = config.invert_signs }
			or { fg = colors.yellow, bg = colors.bg1, reverse = config.invert_signs },
		AndromedaBlueSign = config.transparent_mode and { fg = colors.blue, reverse = config.invert_signs }
			or { fg = colors.blue, bg = colors.bg1, reverse = config.invert_signs },
		AndromedaPurpleSign = config.transparent_mode and { fg = colors.purple, reverse = config.invert_signs }
			or { fg = colors.purple, bg = colors.bg1, reverse = config.invert_signs },
		AndromedaAquaSign = config.transparent_mode and { fg = colors.aqua, reverse = config.invert_signs }
			or { fg = colors.aqua, bg = colors.bg1, reverse = config.invert_signs },
		AndromedaOrangeSign = config.transparent_mode and { fg = colors.orange, reverse = config.invert_signs }
			or { fg = colors.orange, bg = colors.bg1, reverse = config.invert_signs },
		AndromedaRedUnderline = { undercurl = config.undercurl, sp = colors.red },
		AndromedaGreenUnderline = { undercurl = config.undercurl, sp = colors.green },
		AndromedaYellowUnderline = { undercurl = config.undercurl, sp = colors.yellow },
		AndromedaBlueUnderline = { undercurl = config.undercurl, sp = colors.blue },
		AndromedaPurpleUnderline = { undercurl = config.undercurl, sp = colors.purple },
		AndromedaAquaUnderline = { undercurl = config.undercurl, sp = colors.aqua },
		AndromedaOrangeUnderline = { undercurl = config.undercurl, sp = colors.orange },
		Normal = config.transparent_mode and { fg = colors.fg1, bg = nil } or { fg = colors.fg1, bg = colors.bg0 },
		NormalFloat = config.transparent_mode and { fg = colors.fg1, bg = nil } or { fg = colors.fg1, bg = colors.bg1 },
		NormalNC = config.dim_inactive and { fg = colors.fg0, bg = colors.bg1 } or { link = "Normal" },
		CursorLine = { bg = colors.bg1 },
		CursorColumn = { link = "CursorLine" },
		TabLineFill = { fg = colors.bg4, bg = colors.bg1, reverse = config.invert_tabline },
		TabLineSel = { fg = colors.green, bg = colors.bg1, reverse = config.invert_tabline },
		TabLine = { link = "TabLineFill" },
		MatchParen = { bg = colors.bg3, bold = config.bold },
		ColorColumn = { bg = colors.bg1 },
		Conceal = { fg = colors.blue },
		CursorLineNr = { fg = colors.yellow, bg = colors.bg1 },
		NonText = { link = "AndromedaBg2" },
		SpecialKey = { link = "AndromedaFg4" },
		Visual = { bg = colors.bg3, reverse = config.invert_selection },
		VisualNOS = { link = "Visual" },
		Search = { fg = colors.yellow, bg = colors.bg0, reverse = config.inverse },
		IncSearch = { fg = colors.orange, bg = colors.bg0, reverse = config.inverse },
		CurSearch = { link = "IncSearch" },
		QuickFixLine = { link = "AndromedaPurple" },
		Underlined = { fg = colors.blue, underline = config.underline },
		StatusLine = { fg = colors.bg2, bg = colors.fg1, reverse = config.inverse },
		StatusLineNC = { fg = colors.bg1, bg = colors.fg4, reverse = config.inverse },
		WinBar = { fg = colors.fg4, bg = colors.bg0 },
		WinBarNC = { fg = colors.fg3, bg = colors.bg1 },
		WinSeparator = config.transparent_mode and { fg = colors.bg3, bg = nil }
			or { fg = colors.bg3, bg = colors.bg0 },
		WildMenu = { fg = colors.blue, bg = colors.bg2, bold = config.bold },
		Directory = { link = "AndromedaGreenBold" },
		Title = { link = "AndromedaGreenBold" },
		ErrorMsg = { fg = colors.bg0, bg = colors.red, bold = config.bold },
		MoreMsg = { link = "AndromedaYellowBold" },
		ModeMsg = { link = "AndromedaYellowBold" },
		Question = { link = "AndromedaOrangeBold" },
		WarningMsg = { link = "AndromedaRedBold" },
		LineNr = { fg = colors.bg4, bg = colors.editor_background },
		SignColumn = config.transparent_mode and { bg = nil } or { bg = colors.editor_background },
		Folded = { fg = colors.gray, bg = colors.bg1, italic = config.italic.folds },
		FoldColumn = config.transparent_mode and { fg = colors.gray, bg = nil }
			or { fg = colors.gray, bg = colors.bg1 },
		Cursor = { reverse = config.inverse },
		vCursor = { link = "Cursor" },
		iCursor = { link = "Cursor" },
		lCursor = { link = "Cursor" },
		Special = { link = "AndromedaOrange" },
		Comment = { fg = colors.gray, italic = config.italic.comments },
		Todo = { fg = colors.bg0, bg = colors.yellow, bold = config.bold, italic = config.italic.comments },
		Done = { fg = colors.orange, bold = config.bold, italic = config.italic.comments },
		Error = { fg = colors.red, bold = config.bold, reverse = config.inverse },
		Statement = { link = "AndromedaRed" },
		Conditional = { link = "AndromedaRed" },
		Repeat = { link = "AndromedaRed" },
		Label = { link = "AndromedaRed" },
		Exception = { link = "AndromedaRed" },
		Operator = { fg = colors.orange, italic = config.italic.operators },
		Keyword = { link = "AndromedaRed" },
		Identifier = { link = "AndromedaBlue" },
		Function = { link = "AndromedaGreenBold" },
		PreProc = { link = "AndromedaAqua" },
		Include = { link = "AndromedaAqua" },
		Define = { link = "AndromedaAqua" },
		Macro = { link = "AndromedaAqua" },
		PreCondit = { link = "AndromedaAqua" },
		Constant = { link = "AndromedaPurple" },
		Character = { link = "AndromedaPurple" },
		String = { fg = colors.green, italic = config.italic.strings },
		Boolean = { link = "AndromedaPurple" },
		Number = { link = "AndromedaPurple" },
		Float = { link = "AndromedaPurple" },
		Type = { link = "AndromedaYellow" },
		StorageClass = { link = "AndromedaOrange" },
		Structure = { link = "AndromedaAqua" },
		Typedef = { link = "AndromedaYellow" },
		Pmenu = { fg = colors.fg1, bg = colors.bg2 },
		PmenuSel = { fg = colors.bg2, bg = colors.blue, bold = config.bold },
		PmenuSbar = { bg = colors.bg2 },
		PmenuThumb = { bg = colors.bg4 },
		DiffDelete = { bg = colors.dark_red },
		DiffAdd = { bg = colors.dark_green },
		DiffChange = { bg = colors.dark_aqua },
		DiffText = { bg = colors.yellow, fg = colors.bg0 },
		SpellCap = { link = "AndromedaBlueUnderline" },
		SpellBad = { link = "AndromedaRedUnderline" },
		SpellLocal = { link = "AndromedaAquaUnderline" },
		SpellRare = { link = "AndromedaPurpleUnderline" },
		Whitespace = { fg = colors.bg2 },
		Delimiter = { link = "AndromedaOrange" },
		EndOfBuffer = { link = "NonText" },
		DiagnosticError = { link = "AndromedaRed" },
		DiagnosticSignError = { link = "AndromedaRedSign" },
		DiagnosticUnderlineError = { link = "AndromedaRedUnderline" },
		DiagnosticWarn = { link = "AndromedaYellow" },
		DiagnosticSignWarn = { link = "AndromedaYellowSign" },
		DiagnosticUnderlineWarn = { link = "AndromedaYellowUnderline" },
		DiagnosticInfo = { link = "AndromedaBlue" },
		DiagnosticSignInfo = { link = "AndromedaBlueSign" },
		DiagnosticUnderlineInfo = { link = "AndromedaBlueUnderline" },
		DiagnosticHint = { link = "AndromedaAqua" },
		DiagnosticSignHint = { link = "AndromedaAquaSign" },
		DiagnosticUnderlineHint = { link = "AndromedaAquaUnderline" },
		DiagnosticFloatingError = { link = "AndromedaRed" },
		DiagnosticFloatingWarn = { link = "AndromedaOrange" },
		DiagnosticFloatingInfo = { link = "AndromedaBlue" },
		DiagnosticFloatingHint = { link = "AndromedaAqua" },
		DiagnosticVirtualTextError = { link = "AndromedaRed" },
		DiagnosticVirtualTextWarn = { link = "AndromedaYellow" },
		DiagnosticVirtualTextInfo = { link = "AndromedaBlue" },
		DiagnosticVirtualTextHint = { link = "AndromedaAqua" },
		DiagnosticOk = { link = "AndromedaGreenSign" },
		LspReferenceRead = { link = "AndromedaYellowBold" },
		LspReferenceText = { link = "AndromedaYellowBold" },
		LspReferenceWrite = { link = "AndromedaOrangeBold" },
		LspCodeLens = { link = "AndromedaGray" },
		LspSignatureActiveParameter = { link = "Search" },
		gitcommitSelectedFile = { link = "AndromedaGreen" },
		gitcommitDiscardedFile = { link = "AndromedaRed" },
		GitSignsAdd = { link = "AndromedaGreen" },
		GitSignsChange = { link = "AndromedaOrange" },
		GitSignsDelete = { link = "AndromedaRed" },
		NvimTreeSymlink = { fg = colors.neutral_aqua },
		NvimTreeRootFolder = { fg = colors.neutral_purple, bold = true },
		NvimTreeFolderIcon = { fg = colors.neutral_blue, bold = true },
		NvimTreeFileIcon = { fg = colors.editor_line_number },
		NvimTreeExecFile = { fg = colors.neutral_green, bold = true },
		NvimTreeOpenedFile = { fg = colors.bright_red, bold = true },
		NvimTreeSpecialFile = { fg = colors.neutral_yellow, bold = true, underline = true },
		NvimTreeImageFile = { fg = colors.neutral_purple },
		NvimTreeIndentMarker = { fg = colors.editor_line_number },
		NvimTreeGitDirty = { fg = colors.neutral_yellow },
		NvimTreeGitStaged = { fg = colors.neutral_yellow },
		NvimTreeGitMerge = { fg = colors.neutral_purple },
		NvimTreeGitRenamed = { fg = colors.neutral_purple },
		NvimTreeGitNew = { fg = colors.neutral_yellow },
		NvimTreeGitDeleted = { fg = colors.neutral_red },
		NvimTreeWindowPicker = { bg = colors.aqua },
		debugPC = { link = "DiffAdd" },
		debugBreakpoint = { link = "AndromedaRedSign" },
		StartifyBracket = { link = "AndromedaFg3" },
		StartifyFile = { link = "AndromedaFg1" },
		StartifyNumber = { link = "AndromedaBlue" },
		StartifyPath = { link = "AndromedaGray" },
		StartifySlash = { link = "AndromedaGray" },
		StartifySection = { link = "AndromedaYellow" },
		StartifySpecial = { link = "AndromedaBg2" },
		StartifyHeader = { link = "AndromedaOrange" },
		StartifyFooter = { link = "AndromedaBg2" },
		StartifyVar = { link = "StartifyPath" },
		StartifySelect = { link = "Title" },
		DirvishPathTail = { link = "AndromedaAqua" },
		DirvishArg = { link = "AndromedaYellow" },
		netrwDir = { link = "AndromedaAqua" },
		netrwClassify = { link = "AndromedaAqua" },
		netrwLink = { link = "AndromedaGray" },
		netrwSymLink = { link = "AndromedaFg1" },
		netrwExe = { link = "AndromedaYellow" },
		netrwComment = { link = "AndromedaGray" },
		netrwList = { link = "AndromedaBlue" },
		netrwHelpCmd = { link = "AndromedaAqua" },
		netrwCmdSep = { link = "AndromedaFg3" },
		netrwVersion = { link = "AndromedaGreen" },
		NERDTreeDir = { link = "AndromedaAqua" },
		NERDTreeDirSlash = { link = "AndromedaAqua" },
		NERDTreeOpenable = { link = "AndromedaOrange" },
		NERDTreeClosable = { link = "AndromedaOrange" },
		NERDTreeFile = { link = "AndromedaFg1" },
		NERDTreeExecFile = { link = "AndromedaYellow" },
		NERDTreeUp = { link = "AndromedaGray" },
		NERDTreeCWD = { link = "AndromedaGreen" },
		NERDTreeHelp = { link = "AndromedaFg1" },
		NERDTreeToggleOn = { link = "AndromedaGreen" },
		NERDTreeToggleOff = { link = "AndromedaRed" },
		CocErrorSign = { link = "AndromedaRedSign" },
		CocWarningSign = { link = "AndromedaOrangeSign" },
		CocInfoSign = { link = "AndromedaBlueSign" },
		CocHintSign = { link = "AndromedaAquaSign" },
		CocErrorFloat = { link = "AndromedaRed" },
		CocWarningFloat = { link = "AndromedaOrange" },
		CocInfoFloat = { link = "AndromedaBlue" },
		CocHintFloat = { link = "AndromedaAqua" },
		CocDiagnosticsError = { link = "AndromedaRed" },
		CocDiagnosticsWarning = { link = "AndromedaOrange" },
		CocDiagnosticsInfo = { link = "AndromedaBlue" },
		CocDiagnosticsHint = { link = "AndromedaAqua" },
		CocSelectedText = { link = "AndromedaRed" },
		CocMenuSel = { link = "PmenuSel" },
		CocCodeLens = { link = "AndromedaGray" },
		CocErrorHighlight = { link = "AndromedaRedUnderline" },
		CocWarningHighlight = { link = "AndromedaOrangeUnderline" },
		CocInfoHighlight = { link = "AndromedaBlueUnderline" },
		CocHintHighlight = { link = "AndromedaAquaUnderline" },
		TelescopeNormal = { link = "AndromedaFg1" },
		TelescopeSelection = { link = "AndromedaOrangeBold" },
		TelescopeSelectionCaret = { link = "AndromedaRed" },
		TelescopeMultiSelection = { link = "AndromedaGray" },
		TelescopeBorder = { link = "TelescopeNormal" },
		TelescopePromptBorder = { link = "TelescopeNormal" },
		TelescopeResultsBorder = { link = "TelescopeNormal" },
		TelescopePreviewBorder = { link = "TelescopeNormal" },
		TelescopeMatching = { link = "AndromedaBlue" },
		TelescopePromptPrefix = { link = "AndromedaRed" },
		TelescopePrompt = { link = "TelescopeNormal" },
		CmpItemAbbr = { link = "AndromedaFg0" },
		CmpItemAbbrDeprecated = { link = "AndromedaFg1" },
		CmpItemAbbrMatch = { link = "AndromedaBlueBold" },
		CmpItemAbbrMatchFuzzy = { link = "AndromedaBlueUnderline" },
		CmpItemMenu = { link = "AndromedaGray" },
		CmpItemKindText = { link = "AndromedaOrange" },
		CmpItemKindVariable = { link = "AndromedaOrange" },
		CmpItemKindMethod = { link = "AndromedaBlue" },
		CmpItemKindFunction = { link = "AndromedaBlue" },
		CmpItemKindConstructor = { link = "AndromedaYellow" },
		CmpItemKindUnit = { link = "AndromedaBlue" },
		CmpItemKindField = { link = "AndromedaBlue" },
		CmpItemKindClass = { link = "AndromedaYellow" },
		CmpItemKindInterface = { link = "AndromedaYellow" },
		CmpItemKindModule = { link = "AndromedaBlue" },
		CmpItemKindProperty = { link = "AndromedaBlue" },
		CmpItemKindValue = { link = "AndromedaOrange" },
		CmpItemKindEnum = { link = "AndromedaYellow" },
		CmpItemKindOperator = { link = "AndromedaYellow" },
		CmpItemKindKeyword = { link = "AndromedaPurple" },
		CmpItemKindEvent = { link = "AndromedaPurple" },
		CmpItemKindReference = { link = "AndromedaPurple" },
		CmpItemKindColor = { link = "AndromedaPurple" },
		CmpItemKindSnippet = { link = "AndromedaGreen" },
		CmpItemKindFile = { link = "AndromedaBlue" },
		CmpItemKindFolder = { link = "AndromedaBlue" },
		CmpItemKindEnumMember = { link = "AndromedaAqua" },
		CmpItemKindConstant = { link = "AndromedaOrange" },
		CmpItemKindStruct = { link = "AndromedaYellow" },
		CmpItemKindTypeParameter = { link = "AndromedaYellow" },
		diffAdded = { link = "DiffAdd" },
		diffRemoved = { link = "DiffDelete" },
		diffChanged = { link = "DiffChange" },
		diffFile = { link = "AndromedaOrange" },
		diffNewFile = { link = "AndromedaYellow" },
		diffOldFile = { link = "AndromedaOrange" },
		diffLine = { link = "AndromedaBlue" },
		diffIndexLine = { link = "diffChanged" },
		NavicIconsFile = { link = "AndromedaBlue" },
		NavicIconsModule = { link = "AndromedaOrange" },
		NavicIconsNamespace = { link = "AndromedaBlue" },
		NavicIconsPackage = { link = "AndromedaAqua" },
		NavicIconsClass = { link = "AndromedaYellow" },
		NavicIconsMethod = { link = "AndromedaBlue" },
		NavicIconsProperty = { link = "AndromedaAqua" },
		NavicIconsField = { link = "AndromedaPurple" },
		NavicIconsConstructor = { link = "AndromedaBlue" },
		NavicIconsEnum = { link = "AndromedaPurple" },
		NavicIconsInterface = { link = "AndromedaGreen" },
		NavicIconsFunction = { link = "AndromedaBlue" },
		NavicIconsVariable = { link = "AndromedaPurple" },
		NavicIconsConstant = { link = "AndromedaOrange" },
		NavicIconsString = { link = "AndromedaGreen" },
		NavicIconsNumber = { link = "AndromedaOrange" },
		NavicIconsBoolean = { link = "AndromedaOrange" },
		NavicIconsArray = { link = "AndromedaOrange" },
		NavicIconsObject = { link = "AndromedaOrange" },
		NavicIconsKey = { link = "AndromedaAqua" },
		NavicIconsNull = { link = "AndromedaOrange" },
		NavicIconsEnumMember = { link = "AndromedaYellow" },
		NavicIconsStruct = { link = "AndromedaPurple" },
		NavicIconsEvent = { link = "AndromedaYellow" },
		NavicIconsOperator = { link = "AndromedaRed" },
		NavicIconsTypeParameter = { link = "AndromedaRed" },
		NavicText = { link = "AndromedaWhite" },
		NavicSeparator = { link = "AndromedaWhite" },
		htmlTag = { link = "AndromedaAquaBold" },
		htmlEndTag = { link = "AndromedaAquaBold" },
		htmlTagName = { link = "AndromedaBlue" },
		htmlArg = { link = "AndromedaOrange" },
		htmlTagN = { link = "AndromedaFg1" },
		htmlSpecialTagName = { link = "AndromedaBlue" },
		htmlLink = { fg = colors.fg4, underline = config.underline },
		htmlSpecialChar = { link = "AndromedaRed" },
		htmlBold = { fg = colors.fg0, bg = colors.bg0, bold = config.bold },
		htmlBoldUnderline = { fg = colors.fg0, bg = colors.bg0, bold = config.bold, underline = config.underline },
		htmlBoldItalic = { fg = colors.fg0, bg = colors.bg0, bold = config.bold, italic = true },
		htmlBoldUnderlineItalic = {
			fg = colors.fg0,
			bg = colors.bg0,
			bold = config.bold,
			italic = true,
			underline = config.underline,
		},
		htmlUnderline = { fg = colors.fg0, bg = colors.bg0, underline = config.underline },
		htmlUnderlineItalic = {
			fg = colors.fg0,
			bg = colors.bg0,
			italic = true,
			underline = config.underline,
		},
		htmlItalic = { fg = colors.fg0, bg = colors.bg0, italic = true },
		xmlTag = { link = "AndromedaAquaBold" },
		xmlEndTag = { link = "AndromedaAquaBold" },
		xmlTagName = { link = "AndromedaBlue" },
		xmlEqual = { link = "AndromedaBlue" },
		docbkKeyword = { link = "AndromedaAquaBold" },
		xmlDocTypeDecl = { link = "AndromedaGray" },
		xmlDocTypeKeyword = { link = "AndromedaPurple" },
		xmlCdataStart = { link = "AndromedaGray" },
		xmlCdataCdata = { link = "AndromedaPurple" },
		dtdFunction = { link = "AndromedaGray" },
		dtdTagName = { link = "AndromedaPurple" },
		xmlAttrib = { link = "AndromedaOrange" },
		xmlProcessingDelim = { link = "AndromedaGray" },
		dtdParamEntityPunct = { link = "AndromedaGray" },
		dtdParamEntityDPunct = { link = "AndromedaGray" },
		xmlAttribPunct = { link = "AndromedaGray" },
		xmlEntity = { link = "AndromedaRed" },
		xmlEntityPunct = { link = "AndromedaRed" },
		clojureKeyword = { link = "AndromedaBlue" },
		clojureCond = { link = "AndromedaOrange" },
		clojureSpecial = { link = "AndromedaOrange" },
		clojureDefine = { link = "AndromedaOrange" },
		clojureFunc = { link = "AndromedaYellow" },
		clojureRepeat = { link = "AndromedaYellow" },
		clojureCharacter = { link = "AndromedaAqua" },
		clojureStringEscape = { link = "AndromedaAqua" },
		clojureException = { link = "AndromedaRed" },
		clojureRegexp = { link = "AndromedaAqua" },
		clojureRegexpEscape = { link = "AndromedaAqua" },
		clojureRegexpCharClass = { fg = colors.fg3, bold = config.bold },
		clojureRegexpMod = { link = "clojureRegexpCharClass" },
		clojureRegexpQuantifier = { link = "clojureRegexpCharClass" },
		clojureParen = { link = "AndromedaFg3" },
		clojureAnonArg = { link = "AndromedaYellow" },
		clojureVariable = { link = "AndromedaBlue" },
		clojureMacro = { link = "AndromedaOrange" },
		clojureMeta = { link = "AndromedaYellow" },
		clojureDeref = { link = "AndromedaYellow" },
		clojureQuote = { link = "AndromedaYellow" },
		clojureUnquote = { link = "AndromedaYellow" },
		cOperator = { link = "AndromedaPurple" },
		cppOperator = { link = "AndromedaPurple" },
		cStructure = { link = "AndromedaOrange" },
		pythonBuiltin = { link = "AndromedaOrange" },
		pythonBuiltinObj = { link = "AndromedaOrange" },
		pythonBuiltinFunc = { link = "AndromedaOrange" },
		pythonFunction = { link = "AndromedaAqua" },
		pythonDecorator = { link = "AndromedaRed" },
		pythonInclude = { link = "AndromedaBlue" },
		pythonImport = { link = "AndromedaBlue" },
		pythonRun = { link = "AndromedaBlue" },
		pythonCoding = { link = "AndromedaBlue" },
		pythonOperator = { link = "AndromedaRed" },
		pythonException = { link = "AndromedaRed" },
		pythonExceptions = { link = "AndromedaPurple" },
		pythonBoolean = { link = "AndromedaPurple" },
		pythonDot = { link = "AndromedaFg3" },
		pythonConditional = { link = "AndromedaRed" },
		pythonRepeat = { link = "AndromedaRed" },
		pythonDottedName = { link = "AndromedaGreenBold" },
		cssBraces = { link = "AndromedaBlue" },
		cssFunctionName = { link = "AndromedaYellow" },
		cssIdentifier = { link = "AndromedaOrange" },
		cssClassName = { link = "AndromedaGreen" },
		cssColor = { link = "AndromedaBlue" },
		cssSelectorOp = { link = "AndromedaBlue" },
		cssSelectorOp2 = { link = "AndromedaBlue" },
		cssImportant = { link = "AndromedaGreen" },
		cssVendor = { link = "AndromedaFg1" },
		cssTextProp = { link = "AndromedaAqua" },
		cssAnimationProp = { link = "AndromedaAqua" },
		cssUIProp = { link = "AndromedaYellow" },
		cssTransformProp = { link = "AndromedaAqua" },
		cssTransitionProp = { link = "AndromedaAqua" },
		cssPrintProp = { link = "AndromedaAqua" },
		cssPositioningProp = { link = "AndromedaYellow" },
		cssBoxProp = { link = "AndromedaAqua" },
		cssFontDescriptorProp = { link = "AndromedaAqua" },
		cssFlexibleBoxProp = { link = "AndromedaAqua" },
		cssBorderOutlineProp = { link = "AndromedaAqua" },
		cssBackgroundProp = { link = "AndromedaAqua" },
		cssMarginProp = { link = "AndromedaAqua" },
		cssListProp = { link = "AndromedaAqua" },
		cssTableProp = { link = "AndromedaAqua" },
		cssFontProp = { link = "AndromedaAqua" },
		cssPaddingProp = { link = "AndromedaAqua" },
		cssDimensionProp = { link = "AndromedaAqua" },
		cssRenderProp = { link = "AndromedaAqua" },
		cssColorProp = { link = "AndromedaAqua" },
		cssGeneratedContentProp = { link = "AndromedaAqua" },
		javaScriptBraces = { link = "AndromedaFg1" },
		javaScriptFunction = { link = "AndromedaAqua" },
		javaScriptIdentifier = { link = "AndromedaRed" },
		javaScriptMember = { link = "AndromedaBlue" },
		javaScriptNumber = { link = "AndromedaPurple" },
		javaScriptNull = { link = "AndromedaPurple" },
		javaScriptParens = { link = "AndromedaFg3" },
		typescriptReserved = { link = "AndromedaAqua" },
		typescriptLabel = { link = "AndromedaAqua" },
		typescriptFuncKeyword = { link = "AndromedaAqua" },
		typescriptIdentifier = { link = "AndromedaOrange" },
		typescriptBraces = { link = "AndromedaFg1" },
		typescriptEndColons = { link = "AndromedaFg1" },
		typescriptDOMObjects = { link = "AndromedaFg1" },
		typescriptAjaxMethods = { link = "AndromedaFg1" },
		typescriptLogicSymbols = { link = "AndromedaFg1" },
		typescriptDocSeeTag = { link = "Comment" },
		typescriptDocParam = { link = "Comment" },
		typescriptDocTags = { link = "vimCommentTitle" },
		typescriptGlobalObjects = { link = "AndromedaFg1" },
		typescriptParens = { link = "AndromedaFg3" },
		typescriptOpSymbols = { link = "AndromedaFg3" },
		typescriptHtmlElemProperties = { link = "AndromedaFg1" },
		typescriptNull = { link = "AndromedaPurple" },
		typescriptInterpolationDelimiter = { link = "AndromedaAqua" },
		purescriptModuleKeyword = { link = "AndromedaAqua" },
		purescriptModuleName = { link = "AndromedaFg1" },
		purescriptWhere = { link = "AndromedaAqua" },
		purescriptDelimiter = { link = "AndromedaFg4" },
		purescriptType = { link = "AndromedaFg1" },
		purescriptImportKeyword = { link = "AndromedaAqua" },
		purescriptHidingKeyword = { link = "AndromedaAqua" },
		purescriptAsKeyword = { link = "AndromedaAqua" },
		purescriptStructure = { link = "AndromedaAqua" },
		purescriptOperator = { link = "AndromedaBlue" },
		purescriptTypeVar = { link = "AndromedaFg1" },
		purescriptConstructor = { link = "AndromedaFg1" },
		purescriptFunction = { link = "AndromedaFg1" },
		purescriptConditional = { link = "AndromedaOrange" },
		purescriptBacktick = { link = "AndromedaOrange" },
		coffeeExtendedOp = { link = "AndromedaFg3" },
		coffeeSpecialOp = { link = "AndromedaFg3" },
		coffeeCurly = { link = "AndromedaOrange" },
		coffeeParen = { link = "AndromedaFg3" },
		coffeeBracket = { link = "AndromedaOrange" },
		rubyStringDelimiter = { link = "AndromedaGreen" },
		rubyInterpolationDelimiter = { link = "AndromedaAqua" },
		rubyDefinedOperator = { link = "rubyKeyword" },
		objcTypeModifier = { link = "AndromedaRed" },
		objcDirective = { link = "AndromedaBlue" },
		goDirective = { link = "AndromedaAqua" },
		goConstants = { link = "AndromedaPurple" },
		goDeclaration = { link = "AndromedaRed" },
		goDeclType = { link = "AndromedaBlue" },
		goBuiltins = { link = "AndromedaOrange" },
		luaIn = { link = "AndromedaRed" },
		luaFunction = { link = "AndromedaAqua" },
		luaTable = { link = "AndromedaOrange" },
		moonSpecialOp = { link = "AndromedaFg3" },
		moonExtendedOp = { link = "AndromedaFg3" },
		moonFunction = { link = "AndromedaFg3" },
		moonObject = { link = "AndromedaYellow" },
		javaAnnotation = { link = "AndromedaBlue" },
		javaDocTags = { link = "AndromedaAqua" },
		javaCommentTitle = { link = "vimCommentTitle" },
		javaParen = { link = "AndromedaFg3" },
		javaParen1 = { link = "AndromedaFg3" },
		javaParen2 = { link = "AndromedaFg3" },
		javaParen3 = { link = "AndromedaFg3" },
		javaParen4 = { link = "AndromedaFg3" },
		javaParen5 = { link = "AndromedaFg3" },
		javaOperator = { link = "AndromedaOrange" },
		javaVarArg = { link = "AndromedaGreen" },
		elixirDocString = { link = "Comment" },
		elixirStringDelimiter = { link = "AndromedaGreen" },
		elixirInterpolationDelimiter = { link = "AndromedaAqua" },
		elixirModuleDeclaration = { link = "AndromedaYellow" },
		scalaNameDefinition = { link = "AndromedaFg1" },
		scalaCaseFollowing = { link = "AndromedaFg1" },
		scalaCapitalWord = { link = "AndromedaFg1" },
		scalaTypeExtension = { link = "AndromedaFg1" },
		scalaKeyword = { link = "AndromedaRed" },
		scalaKeywordModifier = { link = "AndromedaRed" },
		scalaSpecial = { link = "AndromedaAqua" },
		scalaOperator = { link = "AndromedaFg1" },
		scalaTypeDeclaration = { link = "AndromedaYellow" },
		scalaTypeTypePostDeclaration = { link = "AndromedaYellow" },
		scalaInstanceDeclaration = { link = "AndromedaFg1" },
		scalaInterpolation = { link = "AndromedaAqua" },
		markdownItalic = { fg = colors.fg3, italic = true },
		markdownBold = { fg = colors.fg3, bold = config.bold },
		markdownBoldItalic = { fg = colors.fg3, bold = config.bold, italic = true },
		markdownH1 = { link = "AndromedaGreenBold" },
		markdownH2 = { link = "AndromedaGreenBold" },
		markdownH3 = { link = "AndromedaYellowBold" },
		markdownH4 = { link = "AndromedaYellowBold" },
		markdownH5 = { link = "AndromedaYellow" },
		markdownH6 = { link = "AndromedaYellow" },
		markdownCode = { link = "AndromedaAqua" },
		markdownCodeBlock = { link = "AndromedaAqua" },
		markdownCodeDelimiter = { link = "AndromedaAqua" },
		markdownBlockquote = { link = "AndromedaGray" },
		markdownListMarker = { link = "AndromedaGray" },
		markdownOrderedListMarker = { link = "AndromedaGray" },
		markdownRule = { link = "AndromedaGray" },
		markdownHeadingRule = { link = "AndromedaGray" },
		markdownUrlDelimiter = { link = "AndromedaFg3" },
		markdownLinkDelimiter = { link = "AndromedaFg3" },
		markdownLinkTextDelimiter = { link = "AndromedaFg3" },
		markdownHeadingDelimiter = { link = "AndromedaOrange" },
		markdownUrl = { link = "AndromedaPurple" },
		markdownUrlTitleDelimiter = { link = "AndromedaGreen" },
		markdownLinkText = { fg = colors.gray, underline = config.underline },
		markdownIdDeclaration = { link = "markdownLinkText" },
		haskellType = { link = "AndromedaBlue" },
		haskellIdentifier = { link = "AndromedaAqua" },
		haskellSeparator = { link = "AndromedaFg4" },
		haskellDelimiter = { link = "AndromedaOrange" },
		haskellOperators = { link = "AndromedaPurple" },
		haskellBacktick = { link = "AndromedaOrange" },
		haskellStatement = { link = "AndromedaPurple" },
		haskellConditional = { link = "AndromedaPurple" },
		haskellLet = { link = "AndromedaRed" },
		haskellDefault = { link = "AndromedaRed" },
		haskellWhere = { link = "AndromedaRed" },
		haskellBottom = { link = "AndromedaRedBold" },
		haskellImportKeywords = { link = "AndromedaPurpleBold" },
		haskellDeclKeyword = { link = "AndromedaOrange" },
		haskellDecl = { link = "AndromedaOrange" },
		haskellDeriving = { link = "AndromedaPurple" },
		haskellAssocType = { link = "AndromedaAqua" },
		haskellNumber = { link = "AndromedaAqua" },
		haskellPragma = { link = "AndromedaRedBold" },
		haskellTH = { link = "AndromedaAquaBold" },
		haskellForeignKeywords = { link = "AndromedaGreen" },
		haskellKeyword = { link = "AndromedaRed" },
		haskellFloat = { link = "AndromedaAqua" },
		haskellInfix = { link = "AndromedaPurple" },
		haskellQuote = { link = "AndromedaGreenBold" },
		haskellShebang = { link = "AndromedaYellowBold" },
		haskellLiquid = { link = "AndromedaPurpleBold" },
		haskellQuasiQuoted = { link = "AndromedaBlueBold" },
		haskellRecursiveDo = { link = "AndromedaPurple" },
		haskellQuotedType = { link = "AndromedaRed" },
		haskellPreProc = { link = "AndromedaFg4" },
		haskellTypeRoles = { link = "AndromedaRedBold" },
		haskellTypeForall = { link = "AndromedaRed" },
		haskellPatternKeyword = { link = "AndromedaBlue" },
		jsonKeyword = { link = "AndromedaGreen" },
		jsonQuote = { link = "AndromedaGreen" },
		jsonBraces = { link = "AndromedaFg1" },
		jsonString = { link = "AndromedaFg1" },
		mailQuoted1 = { link = "AndromedaAqua" },
		mailQuoted2 = { link = "AndromedaPurple" },
		mailQuoted3 = { link = "AndromedaYellow" },
		mailQuoted4 = { link = "AndromedaGreen" },
		mailQuoted5 = { link = "AndromedaRed" },
		mailQuoted6 = { link = "AndromedaOrange" },
		mailSignature = { link = "Comment" },
		csBraces = { link = "AndromedaFg1" },
		csEndColon = { link = "AndromedaFg1" },
		csLogicSymbols = { link = "AndromedaFg1" },
		csParens = { link = "AndromedaFg3" },
		csOpSymbols = { link = "AndromedaFg3" },
		csInterpolationDelimiter = { link = "AndromedaFg3" },
		csInterpolationAlignDel = { link = "AndromedaAquaBold" },
		csInterpolationFormat = { link = "AndromedaAqua" },
		csInterpolationFormatDel = { link = "AndromedaAquaBold" },
		rustSigil = { link = "AndromedaOrange" },
		rustEscape = { link = "AndromedaAqua" },
		rustStringContinuation = { link = "AndromedaAqua" },
		rustEnum = { link = "AndromedaAqua" },
		rustStructure = { link = "AndromedaAqua" },
		rustModPathSep = { link = "AndromedaFg2" },
		rustCommentLineDoc = { link = "Comment" },
		rustDefault = { link = "AndromedaAqua" },
		ocamlOperator = { link = "AndromedaFg1" },
		ocamlKeyChar = { link = "AndromedaOrange" },
		ocamlArrow = { link = "AndromedaOrange" },
		ocamlInfixOpKeyword = { link = "AndromedaRed" },
		ocamlConstructor = { link = "AndromedaOrange" },
		LspSagaCodeActionTitle = { link = "Title" },
		LspSagaCodeActionBorder = { link = "AndromedaFg1" },
		LspSagaCodeActionContent = { fg = colors.green, bold = config.bold },
		LspSagaLspFinderBorder = { link = "AndromedaFg1" },
		LspSagaAutoPreview = { link = "AndromedaOrange" },
		TargetWord = { fg = colors.blue, bold = config.bold },
		FinderSeparator = { link = "AndromedaAqua" },
		LspSagaDefPreviewBorder = { link = "AndromedaBlue" },
		LspSagaHoverBorder = { link = "AndromedaOrange" },
		LspSagaRenameBorder = { link = "AndromedaBlue" },
		LspSagaDiagnosticSource = { link = "AndromedaOrange" },
		LspSagaDiagnosticBorder = { link = "AndromedaPurple" },
		LspSagaDiagnosticHeader = { link = "AndromedaGreen" },
		LspSagaSignatureHelpBorder = { link = "AndromedaGreen" },
		SagaShadow = { link = "AndromedaBg0" },
		DashboardShortCut = { link = "AndromedaOrange" },
		DashboardHeader = { link = "AndromedaAqua" },
		DashboardCenter = { link = "AndromedaYellow" },
		DashboardFooter = { fg = colors.purple, italic = true },
		MasonHighlight = { link = "AndromedaAqua" },
		MasonHighlightBlock = { fg = colors.bg0, bg = colors.blue },
		MasonHighlightBlockBold = { fg = colors.bg0, bg = colors.blue, bold = true },
		MasonHighlightSecondary = { fg = colors.yellow },
		MasonHighlightBlockSecondary = { fg = colors.bg0, bg = colors.yellow },
		MasonHighlightBlockBoldSecondary = { fg = colors.bg0, bg = colors.yellow, bold = true },
		MasonHeader = { link = "MasonHighlightBlockBoldSecondary" },
		MasonHeaderSecondary = { link = "MasonHighlightBlockBold" },
		MasonMuted = { fg = colors.fg4 },
		MasonMutedBlock = { fg = colors.bg0, bg = colors.fg4 },
		MasonMutedBlockBold = { fg = colors.bg0, bg = colors.fg4, bold = true },
		LspInlayHint = { link = "Comment" },
		CarbonFile = { link = "AndromedaFg1" },
		CarbonExe = { link = "AndromedaYellow" },
		CarbonSymlink = { link = "AndromedaAqua" },
		CarbonBrokenSymlink = { link = "AndromedaRed" },
		CarbonIndicator = { link = "AndromedaGray" },
		CarbonDanger = { link = "AndromedaRed" },
		CarbonPending = { link = "AndromedaYellow" },
		NoiceCursor = { link = "TermCursor" },
		NoiceCmdlinePopupBorder = { fg = colors.blue, bg = nil },
		NoiceCmdlineIcon = { link = "NoiceCmdlinePopupBorder" },
		NoiceConfirmBorder = { link = "NoiceCmdlinePopupBorder" },
		NoiceCmdlinePopupBorderSearch = { fg = colors.yellow, bg = nil },
		NoiceCmdlineIconSearch = { link = "NoiceCmdlinePopupBorderSearch" },
		NotifyDEBUGBorder = { link = "AndromedaBlue" },
		NotifyDEBUGIcon = { link = "AndromedaBlue" },
		NotifyDEBUGTitle = { link = "AndromedaBlue" },
		NotifyERRORBorder = { link = "AndromedaRed" },
		NotifyERRORIcon = { link = "AndromedaRed" },
		NotifyERRORTitle = { link = "AndromedaRed" },
		NotifyINFOBorder = { link = "AndromedaAqua" },
		NotifyINFOIcon = { link = "AndromedaAqua" },
		NotifyINFOTitle = { link = "AndromedaAqua" },
		NotifyTRACEBorder = { link = "AndromedaGreen" },
		NotifyTRACEIcon = { link = "AndromedaGreen" },
		NotifyTRACETitle = { link = "AndromedaGreen" },
		NotifyWARNBorder = { link = "AndromedaYellow" },
		NotifyWARNIcon = { link = "AndromedaYellow" },
		NotifyWARNTitle = { link = "AndromedaYellow" },
		IlluminatedWordText = { link = "LspReferenceText" },
		IlluminatedWordRead = { link = "LspReferenceRead" },
		IlluminatedWordWrite = { link = "LspReferenceWrite" },
		TSRainbowRed = { fg = colors.red },
		TSRainbowOrange = { fg = colors.orange },
		TSRainbowYellow = { fg = colors.yellow },
		TSRainbowGreen = { fg = colors.green },
		TSRainbowBlue = { fg = colors.blue },
		TSRainbowViolet = { fg = colors.purple },
		TSRainbowCyan = { fg = colors.aqua },
		RainbowDelimiterRed = { fg = colors.red },
		RainbowDelimiterOrange = { fg = colors.orange },
		RainbowDelimiterYellow = { fg = colors.yellow },
		RainbowDelimiterGreen = { fg = colors.green },
		RainbowDelimiterBlue = { fg = colors.blue },
		RainbowDelimiterViolet = { fg = colors.purple },
		RainbowDelimiterCyan = { fg = colors.aqua },
		DapBreakpointSymbol = { fg = colors.red, bg = colors.bg1 },
		DapStoppedSymbol = { fg = colors.green, bg = colors.bg1 },
		DapUIBreakpointsCurrentLine = { link = "AndromedaYellow" },
		DapUIBreakpointsDisabledLine = { link = "AndromedaGray" },
		DapUIBreakpointsInfo = { link = "AndromedaAqua" },
		DapUIBreakpointsLine = { link = "AndromedaYellow" },
		DapUIBreakpointsPath = { link = "AndromedaBlue" },
		DapUICurrentFrameName = { link = "AndromedaPurple" },
		DapUIDecoration = { link = "AndromedaPurple" },
		DapUIEndofBuffer = { link = "EndOfBuffer" },
		DapUIFloatBorder = { link = "AndromedaAqua" },
		DapUILineNumber = { link = "AndromedaYellow" },
		DapUIModifiedValue = { link = "AndromedaRed" },
		DapUIPlayPause = { fg = colors.green, bg = colors.bg1 },
		DapUIRestart = { fg = colors.green, bg = colors.bg1 },
		DapUIScope = { link = "AndromedaBlue" },
		DapUISource = { link = "AndromedaFg1" },
		DapUIStepBack = { link = "AndromedaBlue" },
		DapUIStepInto = { link = "AndromedaBlue" },
		DapUIStepOut = { link = "AndromedaBlue" },
		DapUIStepOver = { link = "AndromedaBlue" },
		DapUIStop = { link = "AndromedaRed" },
		DapUIStoppedThread = { link = "AndromedaBlue" },
		DapUIThread = { link = "AndromedaBlue" },
		DapUIType = { link = "AndromedaOrange" },
		DapUIUnavailable = { link = "AndromedaGray" },
		DapUIWatchesEmpty = { link = "AndromedaGray" },
		DapUIWatchesError = { link = "AndromedaRed" },
		DapUIWatchesValue = { link = "AndromedaYellow" },
		DapUIWinSelect = { link = "AndromedaYellow" },
		NeogitDiffDelete = { link = "DiffDelete" },
		NeogitDiffAdd = { link = "DiffAdd" },
		NeogitHunkHeader = { link = "WinBar" },
		NeogitHunkHeaderHighlight = { link = "WinBarNC" },
		DiffviewStatusModified = { link = "AndromedaGreenBold" },
		DiffviewFilePanelInsertions = { link = "AndromedaGreenBold" },
		DiffviewFilePanelDeletions = { link = "AndromedaRedBold" },
		MiniAnimateCursor = { reverse = true, nocombine = true },
		MiniAnimateNormalFloat = { fg = colors.fg1, bg = colors.bg1 },
		MiniClueBorder = { link = "FloatBorder" },
		MiniClueDescGroup = { link = "DiagnosticFloatingWarn" },
		MiniClueDescSingle = { link = "NormalFloat" },
		MiniClueNextKey = { link = "DiagnosticFloatingHint" },
		MiniClueNextKeyWithPostkeys = { link = "DiagnosticFloatingError" },
		MiniClueSeparator = { link = "DiagnosticFloatingInfo" },
		MiniClueTitle = { link = "FloatTitle" },
		MiniCompletionActiveParameter = { underline = true },
		MiniCursorword = { underline = true },
		MiniCursorwordCurrent = { underline = true },
		MiniDepsChangeAdded = { link = "AndromedaGreen" },
		MiniDepsChangeRemoved = { link = "AndromedaRed" },
		MiniDepsHint = { link = "DiagnosticHint" },
		MiniDepsInfo = { link = "DiagnosticInfo" },
		MiniDepsMsgBreaking = { link = "DiagnosticWarn" },
		MiniDepsPlaceholder = { link = "Comment" },
		MiniDepsTitle = { link = "Title" },
		MiniDepsTitleError = { link = "DiffDelete" },
		MiniDepsTitleSame = { link = "DiffChange" },
		MiniDepsTitleUpdate = { link = "DiffAdd" },
		MiniDiffOverAdd = { link = "DiffAdd" },
		MiniDiffOverChange = { link = "DiffText" },
		MiniDiffOverContext = { link = "DiffChange" },
		MiniDiffOverDelete = { link = "DiffDelete" },
		MiniDiffSignAdd = { link = "AndromedaGreen" },
		MiniDiffSignChange = { link = "AndromedaAqua" },
		MiniDiffSignDelete = { link = "AndromedaRed" },
		MiniFilesBorder = { link = "FloatBorder" },
		MiniFilesBorderModified = { link = "DiagnosticFloatingWarn" },
		MiniFilesCursorLine = { bg = colors.bg2 },
		MiniFilesDirectory = { link = "Directory" },
		MiniFilesFile = { link = "AndromedaFg1" },
		MiniFilesNormal = { link = "NormalFloat" },
		MiniFilesTitle = { link = "FloatTitle" },
		MiniFilesTitleFocused = { link = "AndromedaOrangeBold" },
		MiniHipatternsFixme = { fg = colors.bg0, bg = colors.red, bold = config.bold },
		MiniHipatternsHack = { fg = colors.bg0, bg = colors.yellow, bold = config.bold },
		MiniHipatternsNote = { fg = colors.bg0, bg = colors.blue, bold = config.bold },
		MiniHipatternsTodo = { fg = colors.bg0, bg = colors.aqua, bold = config.bold },
		MiniIconsAzure = { link = "AndromedaBlue" },
		MiniIconsBlue = { link = "AndromedaBlue" },
		MiniIconsCyan = { link = "AndromedaAqua" },
		MiniIconsGreen = { link = "AndromedaGreen" },
		MiniIconsGrey = { link = "AndromedaFg0" },
		MiniIconsOrange = { link = "AndromedaOrange" },
		MiniIconsPurple = { link = "AndromedaPurple" },
		MiniIconsRed = { link = "AndromedaRed" },
		MiniIconsYellow = { link = "AndromedaYellow" },
		MiniIndentscopeSymbol = { link = "AndromedaGray" },
		MiniIndentscopeSymbolOff = { link = "AndromedaYellow" },
		MiniJump = { link = "AndromedaOrangeUnderline" },
		MiniJump2dDim = { link = "AndromedaGray" },
		MiniJump2dSpot = { fg = colors.orange, bold = config.bold, nocombine = true },
		MiniJump2dSpotAhead = { fg = colors.aqua, bg = colors.bg0, nocombine = true },
		MiniJump2dSpotUnique = { fg = colors.yellow, bold = config.bold, nocombine = true },
		MiniMapNormal = { link = "NormalFloat" },
		MiniMapSymbolCount = { link = "Special" },
		MiniMapSymbolLine = { link = "Title" },
		MiniMapSymbolView = { link = "Delimiter" },
		MiniNotifyBorder = { link = "FloatBorder" },
		MiniNotifyNormal = { link = "NormalFloat" },
		MiniNotifyTitle = { link = "FloatTitle" },
		MiniOperatorsExchangeFrom = { link = "IncSearch" },
		MiniPickBorder = { link = "FloatBorder" },
		MiniPickBorderBusy = { link = "DiagnosticFloatingWarn" },
		MiniPickBorderText = { link = "FloatTitle" },
		MiniPickIconDirectory = { link = "Directory" },
		MiniPickIconFile = { link = "NormalFloat" },
		MiniPickHeader = { link = "DiagnosticFloatingHint" },
		MiniPickMatchCurrent = { bg = colors.bg2 },
		MiniPickMatchMarked = { link = "Visual" },
		MiniPickMatchRanges = { link = "DiagnosticFloatingHint" },
		MiniPickNormal = { link = "NormalFloat" },
		MiniPickPreviewLine = { link = "CursorLine" },
		MiniPickPreviewRegion = { link = "IncSearch" },
		MiniPickPrompt = { link = "DiagnosticFloatingInfo" },
		MiniStarterCurrent = { nocombine = true },
		MiniStarterFooter = { link = "AndromedaGray" },
		MiniStarterHeader = { link = "Title" },
		MiniStarterInactive = { link = "Comment" },
		MiniStarterItem = { link = "Normal" },
		MiniStarterItemBullet = { link = "Delimiter" },
		MiniStarterItemPrefix = { link = "WarningMsg" },
		MiniStarterSection = { link = "Delimiter" },
		MiniStarterQuery = { link = "MoreMsg" },
		MiniStatuslineDevinfo = { link = "StatusLine" },
		MiniStatuslineFileinfo = { link = "StatusLine" },
		MiniStatuslineFilename = { link = "StatusLineNC" },
		MiniStatuslineInactive = { link = "StatusLineNC" },
		MiniStatuslineModeCommand = { fg = colors.bg0, bg = colors.yellow, bold = config.bold },
		MiniStatuslineModeInsert = { fg = colors.bg0, bg = colors.blue, bold = config.bold },
		MiniStatuslineModeNormal = { fg = colors.bg0, bg = colors.fg1, bold = config.bold },
		MiniStatuslineModeOther = { fg = colors.bg0, bg = colors.aqua, bold = config.bold },
		MiniStatuslineModeReplace = { fg = colors.bg0, bg = colors.red, bold = config.bold },
		MiniStatuslineModeVisual = { fg = colors.bg0, bg = colors.green, bold = config.bold },
		MiniSurround = { link = "IncSearch" },
		MiniTablineCurrent = { fg = colors.green, bg = colors.bg1, bold = config.bold, reverse = config.invert_tabline },
		MiniTablineFill = { link = "TabLineFill" },
		MiniTablineHidden = { fg = colors.bg4, bg = colors.bg1, reverse = config.invert_tabline },
		MiniTablineModifiedCurrent = {
			fg = colors.bg1,
			bg = colors.green,
			bold = config.bold,
			reverse = config.invert_tabline,
		},
		MiniTablineModifiedHidden = { fg = colors.bg1, bg = colors.bg4, reverse = config.invert_tabline },
		MiniTablineModifiedVisible = { fg = colors.bg1, bg = colors.fg1, reverse = config.invert_tabline },
		MiniTablineTabpagesection = { link = "Search" },
		MiniTablineVisible = { fg = colors.fg1, bg = colors.bg1, reverse = config.invert_tabline },
		MiniTestEmphasis = { bold = config.bold },
		MiniTestFail = { link = "AndromedaRedBold" },
		MiniTestPass = { link = "AndromedaGreenBold" },
		MiniTrailspace = { bg = colors.red },
		["@comment"] = { link = "Comment" },
		["@none"] = { bg = "NONE", fg = "NONE" },
		["@preproc"] = { link = "PreProc" },
		["@define"] = { link = "Define" },
		["@operator"] = { link = "Operator" },
		["@punctuation.delimiter"] = { link = "Delimiter" },
		["@punctuation.bracket"] = { link = "Delimiter" },
		["@punctuation.special"] = { link = "Delimiter" },
		["@string"] = { link = "String" },
		["@string.regex"] = { link = "String" },
		["@string.regexp"] = { link = "String" },
		["@string.escape"] = { link = "SpecialChar" },
		["@string.special"] = { link = "SpecialChar" },
		["@string.special.path"] = { link = "Underlined" },
		["@string.special.symbol"] = { link = "Identifier" },
		["@string.special.url"] = { link = "Underlined" },
		["@character"] = { link = "Character" },
		["@character.special"] = { link = "SpecialChar" },
		["@boolean"] = { link = "Boolean" },
		["@number"] = { link = "Number" },
		["@number.float"] = { link = "Float" },
		["@float"] = { link = "Float" },
		["@function"] = { link = "Function" },
		["@function.builtin"] = { link = "Special" },
		["@function.call"] = { link = "Function" },
		["@function.macro"] = { link = "Macro" },
		["@function.method"] = { link = "Function" },
		["@method"] = { link = "Function" },
		["@method.call"] = { link = "Function" },
		["@constructor"] = { link = "Special" },
		["@parameter"] = { link = "Identifier" },
		["@keyword"] = { link = "Keyword" },
		["@keyword.conditional"] = { link = "Conditional" },
		["@keyword.debug"] = { link = "Debug" },
		["@keyword.directive"] = { link = "PreProc" },
		["@keyword.directive.define"] = { link = "Define" },
		["@keyword.exception"] = { link = "Exception" },
		["@keyword.function"] = { link = "Keyword" },
		["@keyword.import"] = { link = "Include" },
		["@keyword.operator"] = { link = "AndromedaRed" },
		["@keyword.repeat"] = { link = "Repeat" },
		["@keyword.return"] = { link = "Keyword" },
		["@keyword.storage"] = { link = "StorageClass" },
		["@conditional"] = { link = "Conditional" },
		["@repeat"] = { link = "Repeat" },
		["@debug"] = { link = "Debug" },
		["@label"] = { link = "Label" },
		["@include"] = { link = "Include" },
		["@exception"] = { link = "Exception" },
		["@type"] = { link = "Type" },
		["@type.builtin"] = { link = "Type" },
		["@type.definition"] = { link = "Typedef" },
		["@type.qualifier"] = { link = "Type" },
		["@storageclass"] = { link = "StorageClass" },
		["@attribute"] = { link = "PreProc" },
		["@field"] = { link = "Identifier" },
		["@property"] = { link = "Identifier" },
		["@variable"] = { link = "AndromedaFg1" },
		["@variable.builtin"] = { link = "Special" },
		["@variable.member"] = { link = "Identifier" },
		["@variable.parameter"] = { link = "Identifier" },
		["@constant"] = { link = "Constant" },
		["@constant.builtin"] = { link = "Special" },
		["@constant.macro"] = { link = "Define" },
		["@markup"] = { link = "AndromedaFg1" },
		["@markup.strong"] = { bold = config.bold },
		["@markup.italic"] = { link = "@text.emphasis" },
		["@markup.underline"] = { underline = config.underline },
		["@markup.strikethrough"] = { strikethrough = config.strikethrough },
		["@markup.heading"] = { link = "Title" },
		["@markup.raw"] = { link = "String" },
		["@markup.math"] = { link = "Special" },
		["@markup.environment"] = { link = "Macro" },
		["@markup.environment.name"] = { link = "Type" },
		["@markup.link"] = { link = "Underlined" },
		["@markup.link.label"] = { link = "SpecialChar" },
		["@markup.list"] = { link = "Delimiter" },
		["@markup.list.checked"] = { link = "AndromedaGreen" },
		["@markup.list.unchecked"] = { link = "AndromedaGray" },
		["@comment.todo"] = { link = "Todo" },
		["@comment.note"] = { link = "SpecialComment" },
		["@comment.warning"] = { link = "WarningMsg" },
		["@comment.error"] = { link = "ErrorMsg" },
		["@diff.plus"] = { link = "diffAdded" },
		["@diff.minus"] = { link = "diffRemoved" },
		["@diff.delta"] = { link = "diffChanged" },
		["@module"] = { link = "AndromedaFg1" },
		["@namespace"] = { link = "AndromedaFg1" },
		["@symbol"] = { link = "Identifier" },
		["@text"] = { link = "AndromedaFg1" },
		["@text.strong"] = { bold = config.bold },
		["@text.emphasis"] = { italic = config.italic.emphasis },
		["@text.underline"] = { underline = config.underline },
		["@text.strike"] = { strikethrough = config.strikethrough },
		["@text.title"] = { link = "Title" },
		["@text.literal"] = { link = "String" },
		["@text.uri"] = { link = "Underlined" },
		["@text.math"] = { link = "Special" },
		["@text.environment"] = { link = "Macro" },
		["@text.environment.name"] = { link = "Type" },
		["@text.reference"] = { link = "Constant" },
		["@text.todo"] = { link = "Todo" },
		["@text.todo.checked"] = { link = "AndromedaGreen" },
		["@text.todo.unchecked"] = { link = "AndromedaGray" },
		["@text.note"] = { link = "SpecialComment" },
		["@text.note.comment"] = { fg = colors.purple, bold = config.bold },
		["@text.warning"] = { link = "WarningMsg" },
		["@text.danger"] = { link = "ErrorMsg" },
		["@text.danger.comment"] = { fg = colors.fg0, bg = colors.red, bold = config.bold },
		["@text.diff.add"] = { link = "diffAdded" },
		["@text.diff.delete"] = { link = "diffRemoved" },
		["@tag"] = { link = "Tag" },
		["@tag.attribute"] = { link = "Identifier" },
		["@tag.delimiter"] = { link = "Delimiter" },
		["@punctuation"] = { link = "Delimiter" },
		["@macro"] = { link = "Macro" },
		["@structure"] = { link = "Structure" },
		["@lsp.type.class"] = { link = "@type" },
		["@lsp.type.comment"] = { link = "@comment" },
		["@lsp.type.decorator"] = { link = "@macro" },
		["@lsp.type.enum"] = { link = "@type" },
		["@lsp.type.enumMember"] = { link = "@constant" },
		["@lsp.type.function"] = { link = "@function" },
		["@lsp.type.interface"] = { link = "@constructor" },
		["@lsp.type.macro"] = { link = "@macro" },
		["@lsp.type.method"] = { link = "@method" },
		["@lsp.type.namespace"] = { link = "@namespace" },
		["@lsp.type.parameter"] = { link = "@parameter" },
		["@lsp.type.property"] = { link = "@property" },
		["@lsp.type.struct"] = { link = "@type" },
		["@lsp.type.type"] = { link = "@type" },
		["@lsp.type.typeParameter"] = { link = "@type.definition" },
		["@lsp.type.variable"] = { link = "@variable" },
	}

	-- Apply user-defined overrides
	for group, hl in pairs(config.overrides) do
		if groups[group] then
			-- Remove existing links to prevent conflicts
			groups[group].link = nil
		end
		groups[group] = vim.tbl_extend("force", groups[group] or {}, hl)
	end

	return groups
end

---@param config AndromedaConfig?
Andromeda.setup = function(config)
	Andromeda.config = vim.tbl_deep_extend("force", Andromeda.config, config or {})
end

--- Load the Andromeda colorscheme
Andromeda.load = function()
	if vim.version().minor < 8 then
		vim.notify("Andromeda.nvim: Neovim version 0.8 or higher is required", vim.log.levels.ERROR)
		return
	end

	-- Clear existing highlights if any
	if vim.g.colors_name then
		vim.cmd("hi clear")
	end
	vim.g.colors_name = "Andromeda"
	vim.o.termguicolors = true

	local groups = get_groups()

	-- Apply highlight groups
	for group, settings in pairs(groups) do
		vim.api.nvim_set_hl(0, group, settings)
	end
end

return Andromeda
